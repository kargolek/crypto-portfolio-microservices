version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./quality-assurance/db_dump/backup.sql:/docker-entrypoint-initdb.d/backup.sql
    environment:
      MYSQL_DATABASE: crypto_price
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: "root"
    healthcheck:
      test: "/usr/bin/mysql --user=$MYSQL_USER --password=$MYSQL_PASSWORD --execute \"SHOW DATABASES;\""
      interval: 5s
      timeout: 60s
      retries: 10
    networks:
      - test-env-network

  client-side:
    container_name: client-side
    build:
      context: client-side
      dockerfile: Dockerfile
    ports:
      - "4201:80"
    volumes:
      - ./client-side/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./client-side/dist/client-side:/usr/share/nginx/html:ro
    networks:
      - test-env-network
    restart: always

  discovery-server:
    container_name: discovery-server
    build:
      context: discovery-server
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    volumes:
      - /tmp
    networks:
      - test-env-network

  gateway-service:
    container_name: gateway-service
    build:
      context: gateway-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - /tmp
    environment:
      SPRING_PROFILES_ACTIVE: docker
    depends_on:
      discovery-server:
        condition: service_started
    networks:
      - test-env-network

  crypto-price-service:
    container_name: crypto-price-service
    build:
      context: crypto-price-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    volumes:
      - /tmp
    depends_on:
      mysql:
        condition: service_healthy
      discovery-server:
        condition: service_started
      gateway-service:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker
      COIN_MARKET_CAP_API_KEY: ${COIN_MARKET_CAP_API_KEY}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      POLYGON_API_KEY: ${POLYGON_API_KEY}
      AVALANCHE_API_KEY: ${AVALANCHE_API_KEY}
    networks:
      - test-env-network

  wallet-service:
    container_name: wallet-service
    build:
      context: wallet-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    volumes:
      - /tmp
    environment:
      SPRING_PROFILES_ACTIVE: docker
      COIN_MARKET_CAP_API_KEY: ${COIN_MARKET_CAP_API_KEY}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      POLYGON_API_KEY: ${POLYGON_API_KEY}
      AVALANCHE_API_KEY: ${AVALANCHE_API_KEY}
    depends_on:
      discovery-server:
        condition: service_started
      gateway-service:
        condition: service_started
    networks:
      - test-env-network
networks:
  test-env-network:
    driver: bridge

